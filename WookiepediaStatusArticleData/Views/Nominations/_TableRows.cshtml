@using WookiepediaStatusArticleData.Nominations.Projects
@model WookiepediaStatusArticleData.Models.Nominations.NominationListViewModel;

@{
    var visibleRows = Model.Query.VisibleRows + Model.Page.Count;
}

@foreach (var nomination in Model.Page)
{
    <tr>
        <td>
            <partial name="_ArticleLink" model="nomination.ArticleName" />
        </td>
        <td>
            <ul>
                @foreach (var nominator in nomination.Nominators)
                {
                    <li>@nominator.Name</li>
                }
            </ul>
        </td>
        <td>@nomination.Outcome</td>
        <td>@nomination.StartedAt.ToString("u")</td>
        <td>@nomination.EndedAt?.ToString("u")</td>
        <td>
            <a asp-controller="Nominations" asp-action="EditForm" asp-route-id="@nomination.Id" style="padding: 0;">
                <em>Edit</em>
            </a>
        </td>
    </tr>
}

@if (Model.Query.VisibleRows + Model.Query.PageSize <= Model.TotalItems)
{
    <tr hx-target="this">
        <td colspan="10">
            <button type="button" hx-get hx-controller="Nominations" hx-action="Index" hx-route-LastId="@Model.Page.Last().Id"
                hx-route-LastStartedAt="@Model.Page.Last().StartedAt.ToString("O")" hx-route-VisibleRows="@visibleRows"
                hx-include="previous form" hx-swap="outerHTML">
                Load next @Model.Query.PageSize
            </button>
        </td>
    </tr>

}
