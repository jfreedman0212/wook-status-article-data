@using WookiepediaStatusArticleData.Nominations.Projects
@model WookiepediaStatusArticleData.Models.Nominations.NominationListViewModel;

@{
    var visibleRows = Model.Query.VisibleRows + Model.Page.Count;
}

@foreach (var nomination in Model.Page)
{
    <tr>
        <td>
            <ul>
                @foreach (var nominator in nomination.Nominators)
                {
                    <li>@nominator.Name</li>
                }
            </ul>
        </td>
        <td>
            <a 
                href="https://starwars.fandom.com/wiki/@nomination.ArticleName.Replace(' ', '_')" 
                referrerpolicy="no-referrer" 
                rel="noreferrer" 
                target="_blank"
            >
                @nomination.ArticleName
            </a>
        </td>
        <td>
            <ul>
                @foreach (var continuity in nomination.Continuities)
                {
                    <li>@continuity</li>
                }
            </ul>
        </td>
        <td>@nomination.Type</td>
        <td>@nomination.Outcome</td>
        <td>@nomination.StartedAt.ToString("u")</td>
        <td>@nomination.EndedAt?.ToString("u")</td>
        <td>@nomination.StartWordCount</td>
        <td>@nomination.EndWordCount</td>
        <td>
            <ul>
                @foreach (var project in nomination.Projects)
                {
                    <li>
                        @if (project.Type == ProjectType.IntellectualProperty)
                        {
                            <em>@project.Name</em>
                        }
                        else
                        {
                            @project.Name
                        }
                    </li>
                }
            </ul>
        </td>
    </tr>
}

@if (Model.Query.VisibleRows + Model.Query.PageSize <= Model.TotalItems)
{
    <tr hx-target="this">
        <td colspan="10">
            <button 
                hx-get
                hx-controller="Nominations"
                hx-action="Index"
                hx-route-LastId="@Model.Page.Last().Id"
                hx-route-LastStartedAt="@Model.Page.Last().StartedAt.ToString("O")"
                hx-route-VisibleRows="@visibleRows"
                hx-include="previous form"
                hx-swap="outerHTML"
            >
                Load next @Model.Query.PageSize
            </button>
        </td>
    </tr>

}
