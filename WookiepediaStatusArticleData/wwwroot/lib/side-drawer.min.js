const style="\n:host {\n  background-color: #ffffff;\n  width: 350px;\n  max-width: 75vw;\n  z-index: 10;\n}\n\n::slotted(*) {\n  box-sizing: border-box;\n}\n\ndialog {\n  all: unset;\n\n  width: inherit;\n  max-width: inherit;\n\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  height: 100%;\n\n  transform: translateX(-100%);\n  transition: var(\n    --side-drawer-transition,\n    transform 0.25s ease-out\n  );\n  visibility: hidden;\n}\n\n:host([right]) dialog {\n  left: unset;\n  right: 0;\n  transform: translateX(100%);\n}\n\n/* putting this here in case this is ever fixed:\n https://github.com/whatwg/html/issues/7732 */\ndialog,\ndialog::backdrop {\n  overscroll-behavior: contain;\n}\n\ndialog:modal {\n  background-color: inherit;\n  box-shadow: 0px 0px 25px 0px rgba(0, 0, 0, 0.5);\n  border-top-right-radius: inherit;\n  border-bottom-right-radius: inherit;\n  border-top-left-radius: inherit;\n  border-bottom-left-radius: inherit;\n}\n\ndialog::backdrop {\n  background-color: #000;\n  backdrop-filter: var(--side-drawer-backdrop-filter, none);\n\n  opacity: 0;\n  transition: var(\n    --side-drawer-overlay-transition,\n    opacity linear 0.25s\n  );\n}\n\ndialog[open] {\n  visibility: visible;\n}\n\n:host([open]) dialog[open],\n:host([open]) dialog[open]::backdrop {\n    transition-delay: 0s;\n    transform: none;\n}\n\n:host([open]) dialog[open]::backdrop {\n    transition-delay: 0s;\n    opacity: var(--side-drawer-overlay-opacity, .7);\n}\n",template='<dialog part="dialog"><slot></slot></dialog>',tmpl=document.createElement("template");tmpl.innerHTML=`<style>${style}</style>${template}`;export class SideDrawer extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"});t.appendChild(tmpl.content.cloneNode(!0)),this._dialog=t.querySelector("dialog")}connectedCallback(){this._dialog.addEventListener("click",(t=>{t.target===this._dialog&&(this.open=!1)})),this._dialog.addEventListener("close",(()=>{this.open=!1})),this.upgradeProperty("open")}upgradeProperty(t){if(this.hasOwnProperty(t)){let n=this[t];delete this[t],this[t]=n}}get open(){return this.hasAttribute("open")}set open(t){t?this.hasAttribute("open")||this.setAttribute("open",""):this.hasAttribute("open")&&this.removeAttribute("open")}static get observedAttributes(){return["open"]}attributeChangedCallback(t,n,e){"open"===t&&(this.open?(this._dialog.showModal(),this.dispatchEvent(new CustomEvent("open",{bubbles:!0}))):(this._dialog.addEventListener("transitionend",(()=>{this._dialog.close()}),{once:!0}),this.dispatchEvent(new CustomEvent("close",{bubbles:!0}))))}}customElements.define("side-drawer",SideDrawer);